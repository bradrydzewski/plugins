{
  "kind": "plugin",
  "type": "step",
  "name": "matrixchat-notify",
  "spec": {
    "name": "Matrixchat Notifications",
    "description": "A plugin to send notifications to Matrix chat rooms from CI pipeline steps. Supports Jinja message templates and Markdown rendering.",
    "step": {
      "type": "script",
      "spec": {
        "image": "spotlightkid/drone-matrixchat-notify",
        "envs": {
          "PLUGIN_ACCESSTOKEN": "${{ inputs.accesstoken }}",
          "PLUGIN_ALLOWED_ATTRS": "${{ inputs.allowed_attrs }}",
          "PLUGIN_ALLOWED_TAGS": "${{ inputs.allowed_tags }}",
          "PLUGIN_DEVICEID": "${{ inputs.deviceid }}",
          "PLUGIN_DEVICENAME": "${{ inputs.devicename }}",
          "PLUGIN_HOMESERVER": "${{ inputs.homeserver }}",
          "PLUGIN_JINJA": "${{ inputs.jinja }}",
          "PLUGIN_MARKDOWN": "${{ inputs.markdown }}",
          "PLUGIN_MARKDOWN_EXTENSIONS": "${{ inputs.markdown_extensions }}",
          "PLUGIN_PASSWORD": "${{ inputs.password }}",
          "PLUGIN_PASS_ENVIRONMENT": "${{ inputs.pass_environment }}",
          "PLUGIN_ROOMID": "${{ inputs.roomid }}",
          "PLUGIN_TEMPLATE": "${{ inputs.template }}",
          "PLUGIN_USERID": "${{ inputs.userid }}"
        }
      }
    },
    "inputs": {
      "accesstoken": {
        "type": "string",
        "description": "Access token to use for authentication instead of `password`.\n\nEither an access token or a password is required.",
        "required": true,
        "mask": true
      },
      "allowed_attrs": {
        "type": "array",
        "description": "List or string with comma-separated list of HTML attribute names or dict mapping tag names to lists of attributes names.",
        "default": "`DEFAULT_ALLOWED_ATTRS`"
      },
      "allowed_tags": {
        "type": "array",
        "description": "List or set or string with comma-separated list of HTML tag names.\n\nHTML tags not included will be stripped from the HTML output generated by\nrendering a Markdown message template.",
        "default": "`DEFAULT_ALLOWED_TAGS`"
      },
      "deviceid": {
        "type": "string",
        "description": "Device ID to send with access token."
      },
      "devicename": {
        "type": "string",
        "description": "Device name to send with access token."
      },
      "homeserver": {
        "type": "string",
        "description": "The Matrix homeserver URL.",
        "default": "https://matrix.org"
      },
      "jinja": {
        "type": "boolean",
        "description": "If set to true, `yes`, `y`, `true`, `t`, `on` or `1`, the message template is rendered with the Jinja templating engine."
      },
      "markdown": {
        "type": "boolean",
        "description": "If set to true, `yes`, `y`, `true`, `t`, `on` or `1`, the message resulting from template substtution is considered to be in Markdown format and will be rendered to HTML."
      },
      "markdown_extensions": {
        "type": "array",
        "description": "Comma-separated list of enabled Markdown extensions.",
        "default": "admonition, extra, sane_lists, smarty"
      },
      "pass_environment": {
        "type": "array",
        "description": "Comma-separated white-list of environment variable names or name\nshell-glob patterns.\n\nOnly environment variables matching any of the given names or patterns\nwill be available as valid placeholders in the message template.",
        "default": "DRONE_*"
      },
      "password": {
        "type": "string",
        "description": "Password to use for authenticating the user set with `userid`.\n\nEither a password or an access token is required.",
        "required": true,
        "mask": true
      },
      "roomid": {
        "type": "string",
        "description": "ID of matrix chat room to send messages to (ID, not alias).",
        "required": true
      },
      "template": {
        "type": "string",
        "description": "The message template.\n\nValid placeholders (example: `${DRONE_REPO}`) will be substituted with the\nvalues of the matching environment variables (subject to filtering\naccording to the `pass_environment` setting).",
        "default": "${DRONE_BUILD_STATUS}"
      },
      "userid": {
        "type": "string",
        "description": "Matrix user ID to send message as (ID, not username).",
        "required": true
      }
    }
  }
}
